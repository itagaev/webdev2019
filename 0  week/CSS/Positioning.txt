An element with position: static; is not positioned in any special way;
 it is always positioned according to the normal flow of the page:

div.static {
  position: static;
  border: 3px solid red;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////
Relative, Other content will not be adjusted to fit into any gap left by the element:
div.relative {
  position: relative;
  left: 30px;
  border: 3px solid red;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////

An element with position: fixed; is positioned relative to the viewport, which means it always stays in the same place even if the page is scrolled. The top, 
right, bottom, and left properties are used to position the element.

div.fixed {
   position: fixed;
   bottom: 0;
   right: 0;
   width: 300px;
   border: 3px solid #73AD21;
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////

An element with position: absolute; is positioned relative to the nearest positioned ancestor (instead of positioned relative to the viewport, like fixed).
div.relative {
    position: relative;
    width: 400px;
    height: 200px;
    border: 3px solid #73AD21;
} 

div.absolute {
    position: absolute;
    top: 80px;
    right: 0;
    width: 200px;
    height: 100px;
    border: 3px solid #73AD21;
}


//////////////////////////////////////////////////////////////////////////////////////////////////

A sticky element toggles between relative and fixed, depending on the scroll position. It is positioned relative until a given offset position is met in the viewport - then it "sticks" in place (like position:fixed).

div.sticky {
    position: -webkit-sticky; /* Safari */
    position: sticky;
    top: 0;
    background-color: green;
    border: 2px solid #4CAF50;
}